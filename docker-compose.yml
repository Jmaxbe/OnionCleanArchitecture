version: '3.4'

services:
  stafftimetableapi:
    image: ${DOCKER_REGISTRY-}stafftimetableapi
    container_name: stafftimetableapi
    hostname: stafftimetableapi
    build:
      context: .
      dockerfile: StaffTimeTableAPI/Dockerfile
    ports:
      - "8000:80"
    restart: unless-stopped
    depends_on:
      - prometheus
      - grafana
      - seq
      - stafftimetableapidb
      - keycloak
    networks:
      - default
  
  todoapi:
    image: ${DOCKER_REGISTRY-}todoapi
    container_name: todoapi
    hostname: todoapi
    build:
      context: .
      dockerfile: ToDoAPI/Dockerfile
    ports:
      - "9000:80"
    restart: unless-stopped
    depends_on:
      - stafftimetableapidb
      - keycloak
      - seq
    networks:
      - default
    
  stafftimetableapidb:
    image: postgres:15.3
    container_name: stafftimetableapidb
    hostname: stafftimetableapidb
    restart: unless-stopped
    environment:
      POSTGRES_DB: "staff_time_table"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "k@}ujt4A-(z@yWAn"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d staff_time_table" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    ports:
      - "5432:5432"
    networks:
      - default
  
  keycloak:
    image: quay.io/keycloak/keycloak:21.1.2
    container_name: keycloak
    hostname: keycloak
    restart: on-failure
    environment:
      KEYCLOAK_ADMIN: master
      KEYCLOAK_ADMIN_PASSWORD: master
      KEYCLOAK_LOGLEVEL: INFO
      ROOT_LOGLEVEL: INFO
    volumes:
      - ./resources/keycloak/import/realm-export.json:/opt/keycloak/data/import/realm.json
    command:
      - start-dev
      - --import-realm
    ports:
      - "8080:8080"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health/ready" ]
      start_period: 10s
      interval: 30s
      retries: 3
      timeout: 5s
    networks:
      - default
  
  seq:
    image: datalust/seq:latest
    container_name: seq
    hostname: seq
    environment:
      - ACCEPT_EULA=Y
    ports:
      - "5341:80"
    networks:
      - default
  
  grafana:
    container_name: grafana
    image: grafana/grafana:master
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
    depends_on:
      - prometheus
    healthcheck:
      test: wget -q --tries=1 -O- http://localhost:3000/
      interval: 3s
      timeout: 3s
      retries: 10
      start_period: 10s
    networks:
      - default

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    healthcheck:
      test: wget -q --tries=1 -O- http://localhost:9090/
      interval: 3s
      timeout: 3s
      retries: 10
      start_period: 10s
    networks:
      - default
      
  jaeger-agent:
    container_name: 'tracing.jaeger.agent'
    hostname: 'tracing.jaeger.agent'
    image: jaegertracing/all-in-one:latest
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778/tcp"
      - "16686:16686"
      - "14268:14268"
      - "9411:9411"
    environment:
      - LOG_LEVEL=debug
    labels:
      NAME: "jaeger-agent"
    networks:
      - default
  
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    hostname: kafka-ui
    ports:
      - "29093:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: Brokers
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: broker-1:9092
      KAFKA_CLUSTERS_0_METRICS_PORT: 9997
      DYNAMIC_CONFIG_ENABLED: 'true'
    networks:
      - default
  
  zookeeper-1:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper-1
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
    networks:
      - default

  zookeeper-2:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper-2
    environment:
      ZOOKEEPER_SERVER_ID: 2
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "32181:2181"
    networks:
      - default
  
  broker-1:
    image: confluentinc/cp-kafka:latest
    container_name: broker-1
    hostname: broker-1
    ports:
      - "19092:19092"
    depends_on:
      - zookeeper-1
      - zookeeper-2
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper-1:2181,zookeeper-2:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker-1:9092,PLAINTEXT_HOST://localhost:19092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - default

  broker-2:
    image: confluentinc/cp-kafka:latest
    container_name: broker-2
    hostname: broker-2
    ports:
      - "19093:19093"
    depends_on:
      - zookeeper-1
      - zookeeper-2
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper-1:2181,zookeeper-2:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker-2:9093,PLAINTEXT_HOST://localhost:19093
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - default
      
  broker-3:
    image: confluentinc/cp-kafka:latest
    container_name: broker-3
    hostname: broker-3
    ports:
      - "19094:19094"
    depends_on:
      - zookeeper-1
      - zookeeper-2
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper-1:2181,zookeeper-2:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker-3:9094,PLAINTEXT_HOST://localhost:19094
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - default
        
networks:
  default:
    external:
      name: default-bridge